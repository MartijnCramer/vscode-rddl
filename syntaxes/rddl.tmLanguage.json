{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "RDDL",
	"fileTypes": [
		"rddl", "rddl2"
	  ],
	"patterns": [
		{
			"include": "#keyword"
		},
		{
			"include": "#comment"
		},
		{
			"include": "#constant"
		},
		{
			"include": "#storage"
		},
		{
			"include": "#meta"
		}
	],
	"repository": {
		"keyword": {
			"patterns": [
				{
					"name": "keyword.control.rddl",
					"match": "\\b(if|then|else|else if|while|for|return|switch)\\b"
				},
				{
                    "match": "\\s(\\^|\\||=>|<=>)\\s",
                    "name": "keyword.operator.logical.c"
				},
				{
                    "match": "\\~(?=[a-zA-Z])",
                    "name": "keyword.operator.logical.c"
				},
				{
                    "match": "\\b(forall_|exists_)(?={)",
                    "name": "keyword.operator.logical.c"
                },
				{
                    "match": "\\s(~=|<=|>=|==|<|>)\\s",
                    "name": "keyword.operator.comparison.c"
				},
				{
                    "match": "\\s=\\s",
                    "name": "keyword.operator.assignment.c"
				},
				{
                    "match": "\\s(\\*|-|\\+)\\s",
                    "name": "keyword.operator.c"
				},
				{
                    "match": "-(?=\\d)",
                    "name": "keyword.operator.c"
				},
				{
                    "match": "\\s(?<!\/)\/(?!\/)\\s",
                    "name": "keyword.operator.c"
				},
				{
                    "match": "\\b(sum_|prod_)(?={)",
                    "name": "keyword.operator.c"
				}
			]
		},
		"comment": {
			"patterns": [
				{
					"name": "comment.line.double-slash.rddl",
					"match": "(\/\/.*)"
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"name": "constant.language.rddl",
					"match": "\\b(true|false)\\b"
				},
				{
					"name": "constant.numeric.rddl",
					"match": "\\b((0(x|X)[0-9a-fA-F]([0-9a-fA-F']*[0-9a-fA-F])?)|(0(b|B)[01]([01']*[01])?)|(([0-9]([0-9']*[0-9])?\\.?[0-9]*([0-9']*[0-9])?)|(\\.[0-9]([0-9']*[0-9])?))((e|E)(\\+|-)?[0-9]([0-9']*[0-9])?)?)(L|l|UL|ul|u|U|F|f|ll|LL|ull|ULL)?\\b"
				}
			]
		}
	},
	"scopeName": "source.rddl"
}